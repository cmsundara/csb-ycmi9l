{"version":3,"sources":["animations/AnimateCircle.tsx","components/Counter/Counter.tsx","components/Start/Start.tsx","components/AddLength/AddLength.tsx","components/Repeat/Repeat.tsx","components/Hold/Hold.tsx","App.tsx","index.tsx"],"names":["makeCircleSmaller","circle","duration","gsap","to","scale","Circle","styled","div","Counter","circleRef","circleClassnames","step","counter","className","ref","Case","capital","ButtonsHolder","Start","startButtonClassnames","isCounting","startTimer","resetButtonClasssnames","reset","disabled","onClick","AddLength","addButton","addLength","decreaseButton","decreaseLength","Repeat","repeat","addRepeat","decreaseRepeat","name","timer","Hold","INITIAL_LENGTH","Number","localStorage","getItem","INITIAL_REPEAT","useState","length","setLength","setCounter","setStep","setIsCounting","setRepeat","repeater","setRepeater","useRef","classnames","countDown","useCallback","cleanTimer","current","clearInterval","useEffect","prevLength","prev","x","delay","makeCircleShake","setInterval","newLength","setItem","toString","next","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef3305a8.chunk.js","sourcesContent":["import gsap from \"gsap\";\n\nexport const makeCircleBigger = (\n  circle: HTMLDivElement | null,\n  duration: number\n) => {\n  gsap.to(circle, {\n    scale: 1.5,\n    duration,\n  });\n};\n\nexport const makeCircleShake = (circle: HTMLDivElement | null) => {\n  gsap.to(circle, {\n    x: 3,\n    duration: 0.1,\n    delay: 0.1,\n  });\n  gsap.to(circle, {\n    x: -3,\n    duration: 0.1,\n    delay: 0.2,\n  });\n  gsap.to(circle, {\n    x: 3,\n    duration: 0.1,\n    delay: 0.3,\n  });\n};\n\nexport const makeCircleSmaller = (\n  circle: HTMLDivElement | null,\n  duration: number\n) => {\n  gsap.to(circle, {\n    scale: 1,\n    duration,\n  });\n};\n","import * as React from \"react\";\nimport Case from \"case\";\nimport styled from \"styled-components\";\n\nconst Circle = styled.div`\n  width: 250px;\n  height: 250px;\n`;\n\ninterface CounterProps {\n  circleRef: React.RefObject<HTMLDivElement>;\n  circleClassnames: string;\n  step: string;\n  counter: number;\n}\n\nconst Counter: React.FC<CounterProps> = ({\n  circleRef,\n  circleClassnames,\n  step,\n  counter,\n}) => {\n  return (\n    <div className=\"circle-holder relative flex items-center justify-center\">\n      <Circle ref={circleRef} className={circleClassnames} />\n      <div className=\"absolute text-center h-100 w-100\">\n        <h2 className=\"text-3xl font-semibold mb-2\">{Case.capital(step)}</h2>\n        <span className=\"text-xl\">{counter}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonsHolder = styled.div`\n  button {\n    outline: none;\n  }\n`;\n\ninterface StartProps {\n  startButtonClassnames: string;\n  isCounting: boolean;\n  startTimer: () => void;\n  resetButtonClasssnames: string;\n  reset: () => void;\n}\n\nconst Start: React.FC<StartProps> = ({\n  startButtonClassnames,\n  isCounting,\n  startTimer,\n  resetButtonClasssnames,\n  reset,\n}) => {\n  return (\n    <ButtonsHolder className=\"flex flex-row mt-24\">\n      <button\n        className={startButtonClassnames}\n        disabled={isCounting}\n        onClick={startTimer}\n      >\n        Start\n      </button>\n\n      <button\n        className={resetButtonClasssnames}\n        onClick={reset}\n        disabled={!isCounting}\n      >\n        Reset\n      </button>\n    </ButtonsHolder>\n  );\n};\n\nexport default Start;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonsHolder = styled.div`\n  button {\n    outline: none;\n  }\n`;\n\ninterface AddLengthProps {\n  addButton: string;\n  isCounting: boolean;\n  addLength: () => void;\n  decreaseButton: string;\n  decreaseLength: () => void;\n}\n\nconst AddLength: React.FC<AddLengthProps> = ({\n  addButton,\n  isCounting,\n  addLength,\n  decreaseButton,\n  decreaseLength,\n}) => {\n  return (\n    <ButtonsHolder className=\"flex flex-row mt-5\">\n      <button className={addButton} disabled={isCounting} onClick={addLength}>\n        +\n      </button>\n\n      <button\n        className={decreaseButton}\n        disabled={isCounting}\n        onClick={decreaseLength}\n      >\n        -\n      </button>\n    </ButtonsHolder>\n  );\n};\n\nexport default AddLength;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonsHolder = styled.div`\n  button {\n    outline: none;\n  }\n`;\ninterface RepeatProps {\n  repeat: number;\n  addButton: string;\n  isCounting: boolean;\n  addRepeat: () => void;\n  decreaseButton: string;\n  decreaseRepeat: () => void;\n}\n\nconst Repeat: React.FC<RepeatProps> = ({\n  repeat,\n  addButton,\n  isCounting,\n  addRepeat,\n  decreaseButton,\n  decreaseRepeat,\n}) => {\n  return (\n    <div className=\"flex flex-col mt-10\">\n      <p>Number of repetition: {repeat}</p>\n\n      <ButtonsHolder className=\"flex flex-row mt-5 justify-center\">\n        <button className={addButton} disabled={isCounting} onClick={addRepeat}>\n          +\n        </button>\n\n        <button\n          className={decreaseButton}\n          disabled={isCounting}\n          onClick={decreaseRepeat}\n          name=\"btn\"\n        >\n          -\n        </button>\n      </ButtonsHolder>\n    </div>\n  );\n};\n\nexport default Repeat;\n","import React, { FC, useState, useRef, useEffect, useCallback } from \"react\";\nimport classnames from \"classnames\";\nimport {\n  makeCircleBigger,\n  makeCircleShake,\n  makeCircleSmaller,\n} from \"../../animations/AnimateCircle\";\nimport Counter from \"../Counter/Counter\";\nimport Start from \"../Start/Start\";\nimport AddLength from \"../AddLength/AddLength\";\nimport Repeat from \"../Repeat/Repeat\";\n\nlet timer: any = null;\n\ninterface HoldProps {\n  className?: String;\n}\n\ntype stepState = \"breath\" | \"hold\" | \"breathOut\";\n\nexport const Hold: FC<HoldProps> = ({ className }) => {\n  const DEFAULT_LENGTH = 4;\n  const INITIAL_LENGTH =\n    Number(localStorage.getItem(\"length\")) || DEFAULT_LENGTH;\n\n  const DEFAULT_REPEAT = 3;\n  const INITIAL_REPEAT =\n    Number(localStorage.getItem(\"repeat\")) || DEFAULT_REPEAT;\n\n  const [length, setLength] = useState(INITIAL_LENGTH);\n  const [counter, setCounter] = useState(length);\n  const [step, setStep] = useState<stepState>(\"breath\");\n  const [isCounting, setIsCounting] = useState(false);\n  const [repeat, setRepeat] = useState<number>(INITIAL_REPEAT);\n  const [repeater, setRepeater] = useState<number>(0);\n  const circleRef = useRef<HTMLDivElement>(null);\n\n  const circleClassnames = classnames(\n    \"rounded-full transition-colors duration-300 ease-in-out\",\n    {\n      \"bg-orange-500\": step === \"breath\",\n      \"bg-red-500\": step === \"hold\",\n      \"bg-teal-500\": step === \"breathOut\",\n    }\n  );\n\n  const startButtonClassnames = classnames(\n    \"text-white px-5 py-1 rounded-full mx-1\",\n    {\n      \"bg-blue-500\": !isCounting,\n      \"bg-blue-300\": isCounting,\n    }\n  );\n\n  const resetButtonClasssnames = classnames(\n    \"text-white px-5 py-1 rounded-full mx-1\",\n    {\n      \"bg-gray-700\": isCounting,\n      \"bg-gray-400\": !isCounting,\n    }\n  );\n\n  const addButton = classnames(\n    \"text-white px-5 py-1 rounded-full mx-1 cursor-pointer \",\n    {\n      \"bg-blue-500\": !isCounting,\n      \"bg-blue-300\": isCounting,\n    }\n  );\n\n  const decreaseButton = classnames(\n    \"text-white px-5 py-1 rounded-full mx-1 cursor-pointer \",\n    {\n      \"bg-red-500\": !isCounting,\n      \"bg-red-300\": isCounting,\n    }\n  );\n\n  const startTimer = () => {\n    // reset the step\n    setStep(\"breath\");\n    setIsCounting(true);\n\n    cleanTimer();\n\n    timer = setInterval(() => {\n      countDown();\n    }, 1000);\n  };\n\n  const countDown = () => {\n    setCounter((counter) => counter - 1);\n  };\n\n  const addLength = () => {\n    setLength((prev) => {\n      const newLength = prev + 1;\n      localStorage.setItem(\"length\", newLength.toString());\n\n      // update current lenght\n      setCounter(newLength);\n\n      return newLength;\n    });\n  };\n\n  const decreaseLength = () => {\n    setLength((prev) => {\n      const newLength = prev - 1;\n      if (newLength >= DEFAULT_LENGTH) {\n        localStorage.setItem(\"length\", newLength.toString());\n\n        // update current lenght\n        setCounter(newLength);\n\n        return newLength;\n      }\n\n      return DEFAULT_LENGTH;\n    });\n  };\n\n  const addRepeat = () => {\n    setRepeat((prev) => {\n      const next = prev + 1;\n      localStorage.setItem(\"repeat\", next.toString());\n\n      return next;\n    });\n  };\n\n  const decreaseRepeat = () => {\n    setRepeat((prev) => {\n      const next = prev - 1;\n\n      if (next >= DEFAULT_REPEAT) {\n        localStorage.setItem(\"repeat\", next.toString());\n        return next;\n      }\n\n      return DEFAULT_REPEAT;\n    });\n  };\n\n  const reset = useCallback(() => {\n    cleanTimer();\n    setIsCounting(false);\n    setStep(\"breath\");\n    setCounter(length);\n    setRepeater(0);\n    makeCircleSmaller(circleRef.current, length);\n  }, [length, circleRef]);\n\n  const cleanTimer = () => {\n    clearInterval(timer);\n    timer = null;\n  };\n\n  useEffect(() => {\n    if (isCounting) {\n      if (counter === 0 && step === \"breath\") {\n        setStep(\"hold\");\n        setCounter(length);\n      } else if (counter === 0 && step === \"hold\") {\n        setStep(\"breathOut\");\n        setCounter(length);\n      } else if (counter === 0 && step === \"breathOut\") {\n        setStep(\"breath\");\n        setLength((prevLength) => {\n          const length = prevLength + 1;\n\n          setCounter(length);\n          return length;\n        });\n        setRepeater((prev) => prev + 1);\n      }\n    }\n  }, [isCounting, counter, step, length]);\n\n  useEffect(() => {\n    if (isCounting) {\n      if (counter === length && step === \"breath\") {\n        makeCircleBigger(circleRef.current, length);\n      } else if (counter === length && step === \"hold\") {\n        makeCircleShake(circleRef.current);\n      } else if (counter === length && step === \"breathOut\") {\n        makeCircleSmaller(circleRef.current, length);\n      }\n    }\n  }, [isCounting, counter, step, length, circleRef]);\n\n  useEffect(() => {\n    if (repeater === repeat) {\n      reset();\n    }\n  }, [repeater, repeat, reset]);\n\n  return (\n    <div className={`flex flex-col justify-center items-center   ${className}`}>\n      <Counter\n        circleClassnames={circleClassnames}\n        circleRef={circleRef}\n        counter={counter}\n        step={step}\n      />\n\n      <Start\n        isCounting={isCounting}\n        reset={reset}\n        resetButtonClasssnames={resetButtonClasssnames}\n        startButtonClassnames={startButtonClassnames}\n        startTimer={startTimer}\n      />\n\n      <AddLength\n        addButton={addButton}\n        addLength={addLength}\n        decreaseButton={decreaseButton}\n        decreaseLength={decreaseLength}\n        isCounting={isCounting}\n      />\n\n      <Repeat\n        repeat={repeat}\n        isCounting={isCounting}\n        decreaseRepeat={decreaseRepeat}\n        addRepeat={addRepeat}\n        addButton={addButton}\n        decreaseButton={decreaseButton}\n      />\n    </div>\n  );\n};\n\nexport default Hold;\n","import React from \"react\";\nimport \"./App.css\";\nimport Hold from \"./components/Hold\";\n\nconst App = () => {\n  return (\n    <div className=\"bg-gray-300 h-screen\">\n      <Hold className=\"pt-20\" />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}